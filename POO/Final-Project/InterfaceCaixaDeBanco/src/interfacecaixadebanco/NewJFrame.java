
package interfacecaixadebanco;

/**
 *
 * @author Arthur e Gabriel
 */
public final class NewJFrame extends javax.swing.JFrame {

    String buffer;
    String user = "";
    String userAux = "";
    String pin = "";  
    String pinAux = "";
    String option = "";
    String optionAux = "";
    String depositAux = "";
    String withdrawAux = "";
    
    Conta[] contas = new Conta[5];
    Conta account;
    Caixa atm = new Caixa();
    BalanceInquiry balance = new BalanceInquiry();
    Deposit deposit = new Deposit();
    Withdrawal withdrawal = new Withdrawal();
    
    boolean userFound = false;
    boolean pinFound = false;
    boolean flagOptionMenu = false;
    boolean flagDeposit = false;
    boolean flagWithdraw = false;
    
    double accountBalance;
    double depositAmount = 0;
    int place;
    int withdrawSucess = 0;
    int withdrawOption = 0;
    
    public NewJFrame() {
        initComponents();
        buffer = "Welcome!\n";
        inicializaContas(contas);
        atm.setSaldoCaixa(10000.0);
        
        jTextArea1.setText(buffer);
        jPasswordField1.setVisible(false);
        jLabel2.setVisible(false);
        buttonExample.setVisible(false);
    }
    
    public void inicializaContas(Conta[] con){
        //double saldoCaixaE;
        //saldoCaixaE = 10000;
        
        Conta con0 = new Conta("00000", "99999", 10000);
        Conta con1 = new Conta("11111", "22222", 20000);
        Conta con2 = new Conta("22222", "11111", 30000);
        Conta con3 = new Conta("33333", "66666", 40000);
        Conta con4 = new Conta("44444", "55555", 50000);
        con[0] = con0;
        con[1] = con1;
        con[2] = con2;
        con[3] = con3;
        con[4] = con4;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton10 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        ButtonEnter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPasswordField1 = new javax.swing.JPasswordField();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ButtonEnter1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        buttonExample = new javax.swing.JButton();
        ButtonReturn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton0 = new javax.swing.JButton();

        jButton10.setText("9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PressOne(evt);
            }
        });

        ButtonEnter.setBackground(new java.awt.Color(0, 255, 51));
        ButtonEnter.setText("Enter");
        ButtonEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PressEnter(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jPasswordField1.setEditable(false);

        jTextField1.setEditable(false);

        jLabel1.setText("USER");

        jLabel2.setText("PIN");

        ButtonEnter1.setBackground(new java.awt.Color(255, 51, 51));
        ButtonEnter1.setText("Del");
        ButtonEnter1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PressBackspace(evt);
            }
        });

        jButton2.setText("2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PressTwo(evt);
            }
        });

        jButton3.setText("3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PressThree(evt);
            }
        });

        ButtonReturn.setBackground(new java.awt.Color(255, 255, 51));
        ButtonReturn.setText("Back");
        ButtonReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PressBack(evt);
            }
        });

        jButton4.setText("4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PressFour(evt);
            }
        });

        jButton5.setText("5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PressFive(evt);
            }
        });

        jButton6.setText("6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PressSix(evt);
            }
        });

        jButton7.setText("7");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PressSeven(evt);
            }
        });

        jButton8.setText("8");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PressEight(evt);
            }
        });

        jButton9.setText("9");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PressNine(evt);
            }
        });

        jButton0.setText("0");
        jButton0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PressZero(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buttonExample, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(104, 104, 104))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton0, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ButtonReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(ButtonEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(ButtonEnter1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(307, 307, 307))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(2, 2, 2))
                    .addComponent(buttonExample, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ButtonEnter1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ButtonReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton0, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ButtonEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PressEnter(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PressEnter
        int i;
        
        if(userAux.length() == 5 && userFound == false && flagOptionMenu == false && flagDeposit == false){            
            for(i=0; i<contas.length; i++){
                if(userAux.equals(contas[i].getUser()) == true){
                    userFound = true;
                    place = i;
                    break;
                }
            }            
            if(userFound == true){
                user = userAux;
                buffer += "User Accepted!\nNow enter your PIN.\n";
                jPasswordField1.setVisible(true);
                jLabel2.setVisible(true);
            }
            else{
                userAux = "";
                buffer = "User not found...\nPlease type your user again\n";
                jTextField1.setText(userAux);
            }
            jTextArea1.setText(buffer);
        }
        
        if(pinAux.length() == 5 && userFound == true && pinFound == false && flagOptionMenu == false && flagDeposit == false){
            
            if(pinAux.equals(contas[place].getPin()) == true){
                pin = pinAux;
                buffer = buffer.substring(0,buffer.length()-20) + "Your account was authenticated\n";
                buffer += "Press Enter to see the Main Menu";
                pinFound = true;
                
                jTextArea1.setText(buffer);
            }
            else{
                pinAux = "";
                buffer = buffer.substring(0,buffer.length()-20);
                buffer += "Your PIN is not correct, please try again"; 
                
                jTextArea1.setText(buffer);
            }
            
        }
        
        else if(pinFound == true && userFound == true && flagOptionMenu == false /*&& flagDeposit == false*/ && option.equals("") == true){  
            
            
            jLabel2.setVisible(false);
            
            buffer = "Main Menu:\n";
            buffer += "\t1 - View my balance\n";
            buffer += "\t2 - Withdraw cash\n";
            buffer += "\t3 - Deposit funds\n";
            buffer += "\t4 - Exit\n";
            buffer += "Enter a choice:";
            
            account = contas[place];
            
            userAux = "";
            pinAux = "";
            jTextField1.setText(userAux);
            jLabel1.setText("Option");
            jPasswordField1.setText(pinAux);
            jTextArea1.setText(buffer);
            jTextField1.setVisible(true);
            jLabel1.setVisible(true);
            jPasswordField1.setVisible(false);
            
            ButtonReturn.setVisible(false);
            flagOptionMenu = true;
        }
        
        if(optionAux.length() == 1 && flagOptionMenu == true){
            option = optionAux;                       
            balance.setAccount(account);
            deposit.setAccount(account);
            withdrawal.setAccount(account);
            withdrawal.setCaixa(atm);
            
            if(option.equals("1") == true){
                accountBalance = balance.execute();
                
                buffer = buffer.substring(0, buffer.length() - 15);
                buffer += "Your balance is: " + accountBalance + "\nEnter a choice:";
                optionAux = ""; 
                option = "";
                jTextArea1.setText(buffer);
                jTextField1.setText(optionAux);                
            }
            
            else if(option.equals("2") == true){
                
                if(flagWithdraw == true){
                    
                    withdrawOption = Integer.parseInt(withdrawAux);
                    
                    switch (withdrawOption) {
                        case 1:
                            withdrawal.setAmount(20.00);
                            withdrawSucess = withdrawal.execute();
                            if(withdrawSucess == 1){
                                buffer = "The transaction was a success, do not forget to take your money!\n";
                                buffer += "Press Enter to go to the Main menu.";
                                jTextArea1.setText(buffer);
                                flagWithdraw = false;
                                
                                optionAux = "";
                                option = "";
                                withdrawAux = "";
                                flagOptionMenu = false;
                            }
                            else if(withdrawSucess == 0){
                                buffer = "You don't have enough money for this transaction...\n";
                                buffer += "Press Enter to go to the Main menu.";
                                jTextArea1.setText(buffer);
                                flagWithdraw = false;
                                
                                optionAux = "";
                                option = "";
                                withdrawAux = "";
                                flagOptionMenu = false;
                            }
                            else if(withdrawSucess == -1){
                                buffer = "Sorry, we don't have enough money for this transaction...\n";
                                buffer += "Press Enter to go to the Main menu.";
                                jTextArea1.setText(buffer);
                                flagWithdraw = false;
                                
                                optionAux = "";
                                option = "";
                                withdrawAux = "";
                                flagOptionMenu = false;
                            }
                            break;
                        case 2:
                            withdrawal.setAmount(40.00);
                            withdrawSucess = withdrawal.execute();
                            if(withdrawSucess == 1){
                                buffer = "The transaction was a success, do not forget to take your money!\n";
                                buffer += "Press Enter to go to the Main menu.";
                                jTextArea1.setText(buffer);
                                flagWithdraw = false;
                                
                                optionAux = "";
                                option = "";
                                withdrawAux = "";
                                flagOptionMenu = false;
                            }
                            else if(withdrawSucess == 0){
                                buffer = "You don't have enough money for this transaction...\n";
                                buffer += "Press Enter to go to the Main menu.";
                                jTextArea1.setText(buffer);
                                flagWithdraw = false;
                                
                                optionAux = "";
                                option = "";
                                withdrawAux = "";
                                flagOptionMenu = false;
                            }
                            else if(withdrawSucess == -1){
                                buffer = "Sorry, we don't have enough money for this transaction...\n";
                                buffer += "Press Enter to go to the Main menu.";
                                jTextArea1.setText(buffer);
                                flagWithdraw = false;
                                
                                optionAux = "";
                                option = "";
                                withdrawAux = "";
                                flagOptionMenu = false;
                            }
                            break;
                        case 3:
                            withdrawal.setAmount(60.00);
                            withdrawSucess = withdrawal.execute();
                            if(withdrawSucess == 1){
                                buffer = "The transaction was a success, do not forget to take your money!\n";
                                buffer += "Press Enter to go to the Main menu.";
                                jTextArea1.setText(buffer);
                                flagWithdraw = false;
                                
                                optionAux = "";
                                option = "";
                                withdrawAux = "";
                                flagOptionMenu = false;
                            }
                            else if(withdrawSucess == 0){
                                buffer = "You don't have enough money for this transaction...\n";
                                buffer += "Press Enter to go to the Main menu.";
                                jTextArea1.setText(buffer);
                                flagWithdraw = false;
                                
                                optionAux = "";
                                option = "";
                                withdrawAux = "";
                                flagOptionMenu = false;
                            }
                            else if(withdrawSucess == -1){
                                buffer = "Sorry, we don't have enough money for this transaction...\n";
                                buffer += "Press Enter to go to the Main menu.";
                                jTextArea1.setText(buffer);
                                flagWithdraw = false;
                                
                                optionAux = "";
                                option = "";
                                withdrawAux = "";
                                flagOptionMenu = false;
                            }
                            break;
                        case 4:
                            withdrawal.setAmount(100.00);
                            withdrawSucess = withdrawal.execute();
                            if(withdrawSucess == 1){
                                buffer = "The transaction was a success, do not forget to take your money!\n";
                                buffer += "Press Enter to go to the Main menu.";
                                jTextArea1.setText(buffer);
                                flagWithdraw = false;
                                
                                optionAux = "";
                                option = "";
                                withdrawAux = "";
                                flagOptionMenu = false;
                            }
                            else if(withdrawSucess == 0){
                                buffer = "You don't have enough money for this transaction...\n";
                                buffer += "Press Enter to go to the Main menu.";
                                jTextArea1.setText(buffer);
                                flagWithdraw = false;
                                
                                optionAux = "";
                                option = "";
                                withdrawAux = "";
                                flagOptionMenu = false;
                            }
                            else if(withdrawSucess == -1){
                                buffer = "Sorry, we don't have enough money for this transaction...\n";
                                buffer += "Press Enter to go to the Main menu.";
                                jTextArea1.setText(buffer);
                                flagWithdraw = false;
                                
                                optionAux = "";
                                option = "";
                                withdrawAux = "";
                                flagOptionMenu = false;
                            }
                            break;
                            
                        case 5:
                            withdrawal.setAmount(200.00);
                            withdrawSucess = withdrawal.execute();

                            if(withdrawSucess == 1){
                                buffer = "The transaction was a success, do not forget to take your money!\n";
                                buffer += "Press Enter to go to the Main menu.";
                                jTextArea1.setText(buffer);
                                flagWithdraw = false;

                                optionAux = "";
                                option = "";
                                withdrawAux = "";
                                flagOptionMenu = false;                            
                            }
                            else if(withdrawSucess == 0){
                                buffer = "You don't have enough money for this transaction...\n";
                                buffer += "Press Enter to go to the Main menu.";
                                jTextArea1.setText(buffer);
                                flagWithdraw = false;

                                optionAux = "";
                                option = "";
                                withdrawAux = "";
                                flagOptionMenu = false;   
                            }
                            else if(withdrawSucess == -1){
                                buffer = "Sorry, we don't have enough money for this transaction...\n";
                                buffer += "Press Enter to go to the Main menu.";
                                jTextArea1.setText(buffer);
                                flagWithdraw = false;

                                optionAux = "";
                                option = "";
                                withdrawAux = "";
                                flagOptionMenu = false;   
                            }                        
                            break;
                        
                        case 6:
                            buffer = "This transaction was canceled.\n";
                            buffer += "Press Enter to go to the Main menu.";
                            jTextArea1.setText(buffer);
                            flagWithdraw = false;

                            optionAux = "";
                            option = "";
                            withdrawAux = "";
                            flagOptionMenu = false;
                            break;
                            
                    }
                
                }
                else{
                    buffer = "Withdrawal Menu:\n";
                    buffer += "\t1 - $20\t\t4 - $100\n";
                    buffer += "\t2 - $40\t\t5 - $200\n";
                    buffer += "\t3 - $60\t\t6 - Cancel transaction\n";
                    buffer += "Choose a withdrawal amount:";
                    
                    flagWithdraw = true;
                    jLabel1.setText("Option");
                    jTextField1.setText(withdrawAux);
                    jTextArea1.setText(buffer);
                    
                }
            
            }
            
            else if(option.equals("3") == true){ 
                               
                if(flagDeposit == true){
                    depositAmount = Double.parseDouble(depositAux);
                    depositAmount = depositAmount/100;
                    deposit.setAmount(depositAmount);
                    deposit.execute();
                    
                    buffer = "Please, insert the money on the ATM!\n";
                    buffer += "Press Enter to go to the Main menu.";
                    jTextArea1.setText(buffer);
                    flagDeposit = false;
                    
                    optionAux = "";
                    option = "";
                    depositAux = "";
                    flagOptionMenu = false;
                    
                }
                else{
                    buffer = "How much do you wish to deposit?"; 
                    flagDeposit = true;
                    jLabel1.setText("Amount");
                    jTextField1.setText(depositAux);
                    jTextArea1.setText(buffer);
                }
                
                
            }
            
            else if(option.equals("4") == true){
                
                option = "";
                user = "";
                pin = "";
                optionAux = "";
                userAux = "";
                pinAux = "";
                
                place = -1;
                
                userFound = false;
                pinFound = false;
                flagOptionMenu = false;
                flagDeposit = false;
                flagWithdraw = false;
                
                buffer = "Welcome!\n";
                account = null;
                
                jTextArea1.setText(buffer);
                jLabel1.setText("USER");
                jTextField1.setText(userAux);
                ButtonReturn.setVisible(true);
            }
                
        }
        
    }//GEN-LAST:event_PressEnter

    private void PressOne(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PressOne
        if(userAux.length() < 5 && userFound == false && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            userAux += "1";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        else if(pinAux.length() < 5 && userFound == true && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            pinAux += "1";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        else if(flagOptionMenu == true && flagDeposit == false && flagWithdraw == false){
            optionAux = "1";
            jTextField1.setText(optionAux);
        } 
        
        else if(flagDeposit == true && flagWithdraw == false){
            depositAux += "1";
            jTextField1.setText(depositAux);
            
        }
        else if(flagWithdraw == true){
            withdrawAux = "1";
            jTextField1.setText(withdrawAux);
        }
        
    }//GEN-LAST:event_PressOne

    private void PressBackspace(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PressBackspace
        if(userAux.length() > 0 && userFound == false && flagDeposit == false && flagWithdraw == false){
            userAux = userAux.substring(0, userAux.length()-1);        
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        if(pinAux.length() > 0 && userFound == true && flagDeposit == false && flagWithdraw == false){
            pinAux = pinAux.substring(0, pinAux.length()-1);        
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        if(depositAux.length() > 0 && flagDeposit == true && flagWithdraw == false){
            depositAux = depositAux.substring(0, depositAux.length()-1);
            jTextField1.setText(depositAux);
        }
        
        if(withdrawAux.length() > 0 && flagWithdraw == true){
            withdrawAux = withdrawAux.substring(0, withdrawAux.length()-1);
            jTextField1.setText(depositAux);
        }
    }//GEN-LAST:event_PressBackspace

    private void PressTwo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PressTwo
        if(userAux.length() < 5 && userFound == false && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            userAux += "2";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        else if(pinAux.length() < 5 && userFound == true && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            pinAux += "2";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        else if(flagOptionMenu == true && flagDeposit == false && flagWithdraw == false){
            optionAux = "2";
            jTextField1.setText(optionAux);
        } 
        
        else if(flagDeposit == true && flagWithdraw == false){
            depositAux += "2";
            jTextField1.setText(depositAux);
            
        }
        else if(flagWithdraw == true){
            withdrawAux = "2";
            jTextField1.setText(withdrawAux);
        }     
    }//GEN-LAST:event_PressTwo

    private void PressThree(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PressThree
        if(userAux.length() < 5 && userFound == false && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            userAux += "3";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        else if(pinAux.length() < 5 && userFound == true && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            pinAux += "3";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        else if(flagOptionMenu == true && flagDeposit == false && flagWithdraw == false){
            optionAux = "3";
            jTextField1.setText(optionAux);
        } 
        
        else if(flagDeposit == true && flagWithdraw == false){
            depositAux += "3";
            jTextField1.setText(depositAux);
            
        }
        else if(flagWithdraw == true){
            withdrawAux = "3";
            jTextField1.setText(withdrawAux);
        }
    }//GEN-LAST:event_PressThree

    private void PressBack(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PressBack
        if(user.length() <= 5){
            user = "";
            userAux = "";
            pinAux = "";
            pin = "";
            buffer = "Welcome!\n";
            userFound = false;
            pinFound = false;
            
            jTextArea1.setText(buffer);
            jTextField1.setText(userAux);
            jPasswordField1.setVisible(false);
            jLabel2.setVisible(false);
        }
    }//GEN-LAST:event_PressBack

    private void PressFour(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PressFour
        if(userAux.length() < 5 && userFound == false && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            userAux += "4";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        else if(pinAux.length() < 5 && userFound == true && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            pinAux += "4";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        else if(flagOptionMenu == true && flagDeposit == false && flagWithdraw == false){
            optionAux = "4";
            jTextField1.setText(optionAux);
        } 
        
        else if(flagDeposit == true && flagWithdraw == false){
            depositAux += "4";
            jTextField1.setText(depositAux);
            
        }
        else if(flagWithdraw == true){
            withdrawAux = "4";
            jTextField1.setText(withdrawAux);
        }  
    }//GEN-LAST:event_PressFour

    private void PressFive(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PressFive
        if(userAux.length() < 5 && userFound == false && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            userAux += "5";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        else if(pinAux.length() < 5 && userFound == true && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            pinAux += "5";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        
        else if(flagDeposit == true && flagWithdraw == false){
            depositAux += "5";
            jTextField1.setText(depositAux);
            
        }
        else if(flagWithdraw == true){
            withdrawAux = "5";
            jTextField1.setText(withdrawAux);
        }
    }//GEN-LAST:event_PressFive

    private void PressSix(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PressSix
        if(userAux.length() < 5 && userFound == false && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            userAux += "6";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        else if(pinAux.length() < 5 && userFound == true && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            pinAux += "6";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        
        else if(flagDeposit == true && flagWithdraw == false){
            depositAux += "6";
            jTextField1.setText(depositAux);
            
        }
        else if(flagWithdraw == true){
            withdrawAux = "6";
            jTextField1.setText(withdrawAux);
        }
    }//GEN-LAST:event_PressSix

    private void PressSeven(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PressSeven
        if(userAux.length() < 5 && userFound == false && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            userAux += "7";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        else if(pinAux.length() < 5 && userFound == true && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            pinAux += "7";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        
        else if(flagDeposit == true && flagWithdraw == false){
            depositAux += "7";
            jTextField1.setText(depositAux);
            
        }
    }//GEN-LAST:event_PressSeven

    private void PressEight(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PressEight
        if(userAux.length() < 5 && userFound == false && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            userAux += "8";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        else if(pinAux.length() < 5 && userFound == true && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            pinAux += "8";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        
        else if(flagDeposit == true && flagWithdraw == false){
            depositAux += "8";
            jTextField1.setText(depositAux);
            
        }
    }//GEN-LAST:event_PressEight

    private void PressNine(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PressNine
        if(userAux.length() < 5 && userFound == false && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            userAux += "9";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        else if(pinAux.length() < 5 && userFound == true && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            pinAux += "9";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        
        else if(flagDeposit == true && flagWithdraw == false){
            depositAux += "9";
            jTextField1.setText(depositAux);
            
        }
    }//GEN-LAST:event_PressNine

    private void PressZero(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PressZero
        if(userAux.length() < 5 && userFound == false && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            userAux += "0";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        else if(pinAux.length() < 5 && userFound == true && flagOptionMenu == false && flagDeposit == false && flagWithdraw == false){
            pinAux += "0";
            jPasswordField1.setText(pinAux);
            jTextField1.setText(userAux);
        }
        
        
        else if(flagDeposit == true && flagWithdraw == false){
            if(depositAux.length() != 0){    
                depositAux += "0";
                jTextField1.setText(depositAux);
            }            
        }
    }//GEN-LAST:event_PressZero

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonEnter;
    private javax.swing.JButton ButtonEnter1;
    private javax.swing.JButton ButtonReturn;
    private javax.swing.JButton buttonExample;
    private javax.swing.JButton jButton0;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
